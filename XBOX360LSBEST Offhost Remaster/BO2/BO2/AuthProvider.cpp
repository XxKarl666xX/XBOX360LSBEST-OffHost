#pragma once
#include "stdafx.h"
#include "AuthProvider.h"

namespace AuthProvider
{
	

	byte bo2[] = {
		0x82, 0x93, 0xD8, 0x84, 0x82, 0x1B, 0xCE, 0xF0, 0x82, 0x25, 0xE9, 0x30,
		0x82, 0x27, 0x8A, 0x00, 0x82, 0x5C, 0x53, 0x30, 0x82, 0x26, 0xDB, 0x40,
		0x82, 0x46, 0x16, 0x10, 0x82, 0x49, 0x64, 0x30, 0x82, 0x40, 0x15, 0xE0,
		0x82, 0x27, 0x86, 0xE0, 0x82, 0x48, 0xE4, 0x08, 0x82, 0x48, 0xA4, 0x70,
		0x82, 0x53, 0x35, 0x28, 0x82, 0x53, 0x2A, 0x18, 0x82, 0x8B, 0x6F, 0xD8,
		0x82, 0x49, 0x03, 0x90, 0x82, 0x27, 0x5F, 0x78, 0x82, 0x8B, 0x78, 0xF0,
		0x82, 0x2C, 0xAE, 0x50, 0x82, 0x8B, 0x86, 0xC0, 0x82, 0x8B, 0x8B, 0xA0,
		0x82, 0x41, 0x45, 0x78, 0x82, 0x69, 0x61, 0xB8, 0x82, 0x6B, 0xB4, 0xE0,
		0x82, 0x6B, 0xF9, 0x70, 0x82, 0x6B, 0xF9, 0x88, 0x82, 0x69, 0x17, 0x98,
		0x82, 0x6B, 0x02, 0x78, 0x82, 0x6B, 0x01, 0x48, 0x82, 0x24, 0xCD, 0xA8,
		0x82, 0x25, 0xC5, 0x68, 0x82, 0x25, 0x88, 0x40, 0x82, 0x1D, 0x03, 0xF0,
		0x82, 0x1C, 0x7F, 0x58, 0x82, 0x45, 0x4B, 0xB0, 0x82, 0x45, 0x4E, 0xD8,
		0x82, 0x45, 0x22, 0xF8, 0x82, 0x44, 0x2F, 0x68, 0x00, 0x00, 0x00, 0x00,
		0x82, 0x1E, 0x65, 0x18, 0x82, 0x1E, 0x65, 0x30, 0xC4, 0x03, 0xC3, 0x68,
		0x83, 0xBA, 0x29, 0xF0, 0x82, 0xBB, 0xAE, 0x44, 0x82, 0xBB, 0xAE, 0x68,
		0x82, 0xC7, 0x0F, 0x4C, 0x82, 0xBB, 0xC5, 0x54, 0x83, 0xC4, 0xB2, 0x98,
		0x82, 0x25, 0x9B, 0xC8, 0x82, 0x6C, 0x6E, 0x6C, 0x82, 0x6C, 0x7A, 0x7C,
		0x82, 0x6C, 0x7A, 0x64, 0x82, 0x23, 0xFE, 0x80, 0x82, 0x25, 0x5E, 0x1C,
		0x82, 0x1F, 0x5B, 0x7C, 0x82, 0x1F, 0xC0, 0x4C, 0x82, 0x00, 0x16, 0xD8,
		0x82, 0x71, 0x7D, 0x48, 0x82, 0x1C, 0x3C, 0x74
	};

	
	const int BO2=1;
	int currentGame = 1; //from 0 to 6

	DWORD GetAddress(int index)
	{
		if (currentGame == 0)
			return 0;

		switch (currentGame)
		{
		
		case BO2:
			return *(DWORD*)(bo2 + index * 4);
			break;
		default:
			break;
		}

		return 0;
	}

	Function GetFunction(int index)
	{
		return (Function)GetAddress(index);
	}
}
